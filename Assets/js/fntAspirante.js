import{sweetAlert,lockIconRegister,changeNameBtn,formDataElement,mostrarInputOtroPuestoInteres,inputOtroPuestoInteres,campos,mostrarInputOtroIdioma,mostrarInputOtraHabilidad,initTextEditorTinymce,unLockIconRegister,divLoading}from"./functionsGlobals.js";import{getDataAspirante}from"./jsGlobal.js";const formDescripcionPersonal=document.querySelector("#info-persona"),formPuestoInteres=document.getElementById("perfil-laboral"),formIdioma=document.querySelector("#form-idiomas"),formHabilidad=document.querySelector("#form-habilidades"),formEstudios=document.getElementById("estudios"),experienciaLaboral=document.getElementById("form-experiencia-laboral"),listSelectIdiomas=document.getElementById("select-idiomas-list"),listSelectHabilidades=document.getElementById("select-habilidad-list"),saveDataAspirante=async()=>{tinyMCE.triggerSave();const e=new FormData(formDescripcionPersonal),t=`${base_url}Aspirante/setAspirante`;try{divLoading.style.display="flex";const a=await fetch(t,{method:"POST",body:e}),{status:i,msg:o,value:s}=await a.json();if(!i)return sweetAlert("Error",o,"error"),!1;sweetAlert("Aspirante",o,"success"),changeNameBtn("Aspirante"),lockIconRegister("Aspirante"),document.querySelector("#idAspirante").value=s.idAspirante,await loadPersonalDescription(),getDataAspirante(),divLoading.style.display="none"}catch(e){console.error(e)}},loadDataEditPersonalDescription=async e=>{initTextEditorTinymce("especificaciones");const t=e.target.dataset.idaspirante,a=`${base_url}Aspirante/getOneDataAspirante/${t}`;try{divLoading.style.display="flex";const e=await fetch(a),{status:t,data:i}=await e.json();t&&(document.querySelector("#idAspirante").value=i.idAspirante,tinymce.activeEditor.setContent(i.descripcionPersonalAspirante),document.querySelector("#especificaciones").value=i.descripcionPersonalAspirante,document.querySelector("#txtEstado").value=i.idEstadoLaboralAspiranteFK),divLoading.style.display="none"}catch(e){console.error(e)}},showPersonalDescription=async e=>{document.querySelector("#perfil-laboral-aspirante").innerHTML=`\n        <div class="row d-flex align-items-center justify-content-around">                                     \n            <div class="col-11">\n                ${e.descripcionPersonalAspirante}\n            </div>\n            <a class="btn col-1 text-right" role="button" id="edit-Aspirante">\n                <i class="las la-pen" data-toggle="modal" data-target="#informacion-personal" data-idaspirante="${e.idAspirante}"></i>\n            </a>\n        </div>\n        <div class="row col-12">\n            <h6 data-id="${e.idEstadoLaboral}">Estado laboral actual: <strong>${e.nombreEstado}</strong></h6>\n        </div>\n    `},listPuestoInteres=new Set,seleccionarPuestoInteres=e=>{"LI"===e.target.tagName&&(e.target.classList.contains("active")?(listPuestoInteres.delete(e.target.dataset.id),e.target.classList.remove("active"),document.querySelector("#txtPuesto").value=[...listPuestoInteres]):(listPuestoInteres.add(e.target.dataset.id),e.target.classList.add("active"),document.querySelector("#txtPuesto").value=[...listPuestoInteres]))},insertPuestoInteres=async e=>{e.preventDefault();const t=formDataElement(formPuestoInteres),a=`${base_url}Aspirante/savePuestoInteres`;try{divLoading.style.display="flex";const e=await fetch(a,{method:"POST",body:t}),{status:i,msg:o,data:s}=await e.json();i?(sweetAlert("Puesto interes",o,"success"),formPuestoInteres.reset(),await refreshPuestoInteres(),document.querySelector("#grupo-puesto-otro_puesto").checked=!0,mostrarInputOtroPuestoInteres(),document.querySelectorAll("#list_PuestoInteres li").forEach(e=>{parseInt(e.dataset.id)===parseInt(s)&&(e.classList.add("active"),e.classList.add("disabled"))}),document.querySelector("#data-idPuestoInteres i").classList.replace("la-plus","la-pen"),listPuestoInteres.delete(s),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},insertPuestoInteresAspirante=async()=>{if(""===document.getElementById("txtPuesto").value.trim())sweetAlert("Campos obligatorio","Por favor, seleccione un puesto de interés !!","info");else{const e=formDataElement(formPuestoInteres),t=`${base_url}Aspirante/insertPuestoInteresAspirante`;try{divLoading.style.display="flex";const a=await fetch(t,{method:"POST",body:e}),{status:i,msg:o}=await a.json();i?(sweetAlert("Puesto interes aspirante",o,"success"),await refreshPuestoInteres(),formPuestoInteres.reset(),getDataAspirante()):sweetAlert("Error",o,"error"),divLoading.style.display="none"}catch(e){console.error(e)}}},refreshPuestoInteres=async e=>{const t=document.querySelector("#list_PuestoInteres"),a=`${base_url}Aspirante/getAllPuestoInteres`;try{divLoading.style.display="flex";const e=await fetch(a),{status:i,data:o}=await e.json();i&&(t.innerHTML="",o.forEach(e=>{t.innerHTML+=`\n                    <li data-id="${e.idPuestoInteres}">${e.nombrePuesto}</li>\n                `}),await showPuestoInteres()),divLoading.style.display="none"}catch(e){console.error(e)}},showPuestoInteres=async()=>{const e=document.getElementById("puesto-interes-aspirante"),t=`${base_url}Aspirante/getPuestoInteresAspirante`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i?(document.querySelector("#data-idPuestoInteres i")&&document.querySelector("#data-idPuestoInteres i").classList.replace("la-plus","la-pen"),e.innerHTML="",o.forEach(t=>{e.innerHTML+=`\n                    <div class="row d-flex align-items-center justify-content-around">\n                        <div class="col-11">\n                            ${t.nombrePuesto}\n                        </div>\n                        <a class="btn col-1 text-right" role="button">\n                            <i class="las la-pen" data-toggle="modal" data-target="#puesto-interes" data-idPuestoInteres="${t.idPuestoInteresFK}"></i>\n                        </a>\n                    </div>\n                `})):e.innerHTML='\n                                        <p class="text-center">No hay puestos de interés asociados al usuario. Puedes registrarlo, es gratis. </p>\n                                    ',divLoading.style.display="none"}catch(e){console.error(e)}};let arrObjIdiomas=[];const seleccionarIdioma=async()=>{const e=formDataElement(formIdioma),t=/^[0-9]+$/;let a=!1,i="",o=[];document.querySelectorAll("#txtListIdioma .opciones-idiomas").forEach(s=>{s.selected&&null!==e.get("txtNivelIdioma")&&""!==s.value&&!1===s.disabled?((a=arrObjIdiomas.some(e=>e.nombre===s.value))&&swal("Error","Aspirante ya tiene asociado este idioma.","warning"),arrObjIdiomas.push({nombre:s.value,nivel:e.get("txtNivelIdioma")}),arrObjIdiomas.forEach(e=>i+=`${e.nombre}-`),(o=i.split("-")).forEach(e=>{t.test(e)&&(document.querySelector("#idSelectIdioma").value=e)}),document.querySelector("#nivelIdioma").value=e.get("txtNivelIdioma"),s.classList.add("active"),s.setAttribute("disabled","disabled"),formIdioma.reset()):s.classList.contains("active")||(s.classList.remove("active"),s.removeAttribute("disabled"))}),listSelectIdiomas.innerHTML="",document.querySelector("#nivelIdioma").value="",arrObjIdiomas.forEach(e=>{""!==e&&(t.test(e)||(document.querySelector("#nivelIdioma").value=`${e.nivel}`,listSelectIdiomas.innerHTML+=`\n                    <li>${e.nombre} ---- <b>${e.nivel}</b></li>\n                `))}),await insertIdiomaAspirante()};document.querySelector("#agregar_idioma").addEventListener("click",seleccionarIdioma);const insertIdiomaAspirante=async()=>{const e=`${base_url}Aspirante/setIdiomaAspirante`,t=formDataElement(formIdioma);try{divLoading.style.display="flex";const a=await fetch(e,{method:"POST",body:t}),{status:i,msg:o}=await a.json();i?(sweetAlert("Idioma aspirante",o,"success"),await refreshIdiomasAspirante(),formIdioma.reset(),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},insertNewIdioma=async()=>{const e=`${base_url}Aspirante/setIdioma`,t=formDataElement(formIdioma);if(null===t.get("txtIdioma").trim()||null===t.get("txtNivelIdioma"))sweetAlert("Campos obligatorios","Debe de introducir un valor en el campo de idioma y asignarle una puntuación.","warning");else try{divLoading.style.display="flex";const a=await fetch(e,{method:"POST",body:t}),{status:i,msg:o,id:s}=await a.json();i?(sweetAlert("Idioma",o,"success"),await refreshIdiomasAspirante(),formIdioma.reset(),document.querySelectorAll("#txtListIdioma option").forEach(e=>{parseInt(e.dataset.id)===parseInt(s)&&(e.classList.add("active","disabled"),e.setAttribute("disabled","disabled"))}),document.querySelector("#grupo-puesto-otro_idioma").checked=!0,mostrarInputOtroIdioma(),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},refreshIdiomasAspirante=async()=>{const e=`${base_url}Aspirante/getAllIdiomas`;try{divLoading.style.display="flex";const t=await fetch(e),{status:a,data:i}=await t.json();a?(document.querySelector("#txtListIdioma").innerHTML='<option value="" disabled selected>Seleccione un idioma</option>',i.forEach(e=>{document.querySelector("#txtListIdioma").innerHTML+=`\n                    <option data-id="${e.idIdioma}" value="${e.idIdioma}-${e.nombreIdioma}" class="opciones-idiomas">${e.nombreIdioma}</option>\n                `}),await showIdiomasSelected()):document.querySelector("#txtListIdioma").innerHTML+='\n                    <option value="" disable selected>--Ha ocurrido un error al cargar la lista de idiomas --</option>\n                ',divLoading.style.display="none"}catch(e){console.error(e)}},showIdiomasSelected=async()=>{const e=document.getElementById("idiomas-selected"),t=`${base_url}Aspirante/getIdiomasSelected`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i&&"no"!==o?(document.querySelector("#data-idIdiomas i")&&document.querySelector("#data-idIdiomas i").classList.replace("la-plus","la-pen"),e.innerHTML="",o.forEach(t=>{e.innerHTML+=`\n                <div class="d-flex align-items-center justify-content-around mb-2">\n                    <div class="col-6 d-flex justify-content-between">\n                        <span>${t.nombreIdioma}</span>\n                        <span>${t.nivelIdioma}</span>\n                    </div>\n                    <a class="btn col-6 text-right" role="button" data-idestudio="${t.idIdioma}">\n                        <i class="las la-pen" data-toggle="modal" data-target="#idiomas"></i>\n                    </a>    \n                </div>\n                <hr/>\n                `})):e.innerHTML='\n                                        <p class="text-center">No hay idiomas asociados al usuario. Puedes registrarlo, es gratis.</p>\n                                    ',divLoading.style.display="none"}catch(e){console.error(e)}};let arrObjHabilidad=[];const seleccionarHabilidad=async()=>{new Set;const e=new FormData(formHabilidad),t=/^[0-9]+$/;let a=!1,i="",o=[];document.querySelectorAll("#txtListHabilidad .opciones-habilidad").forEach(s=>{s.selected&&null!==e.get("txtNivelHabilidades")&&""!==s.value&&!1===s.disabled?((a=arrObjHabilidad.some(e=>e.nombre===s.value))&&swal("Error","Aspirante ya tiene asociado este idioma.","warning"),arrObjHabilidad.push({nombre:s.value,nivel:e.get("txtNivelHabilidades")}),arrObjHabilidad.forEach(e=>i+=`${e.nombre}-`),(o=i.split("-")).forEach(e=>{t.test(e)&&(document.querySelector("#idSelectHabilidad").value=e)}),document.querySelector("#nivelHabilidad").value=e.get("txtNivelHabilidades"),s.classList.add("active"),s.setAttribute("disabled","disabled")):s.classList.contains("active")||(s.classList.remove("active"),s.removeAttribute("disabled"))}),listSelectHabilidades.innerHTML="",document.querySelector("#nivelHabilidad").value="",arrObjHabilidad.forEach(e=>{""!==e&&(t.test(e)||(document.querySelector("#nivelHabilidad").value=`${e.nivel}`,listSelectHabilidades.innerHTML+=`\n                    <li>${e.nombre} ---- <b>${e.nivel}</b></li>\n                `))}),await inserHabilidadAspirante()};document.querySelector("#agregar_habilidad").addEventListener("click",seleccionarHabilidad);const inserHabilidadAspirante=async()=>{const e=`${base_url}Aspirante/setHabilidadAspirante`,t=formDataElement(formHabilidad);try{divLoading.style.display="flex";const a=await fetch(e,{method:"POST",body:t}),{status:i,msg:o}=await a.json();i?(sweetAlert("Habilidad aspirante",o,"success"),await refreshHabilidadAspirante(),formHabilidad.reset(),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},insertHabilidad=async()=>{const e=`${base_url}Aspirante/setHabilidad`,t=formDataElement(formHabilidad);try{divLoading.style.display="flex";const a=await fetch(e,{method:"POST",body:t}),{status:i,msg:o,id:s}=await a.json();i?(sweetAlert("Habilidad aspirante",o,"success"),await refreshHabilidadAspirante(),document.querySelectorAll("#txtListHabilidad option").forEach(e=>{parseInt(e.dataset.id)===parseInt(s)&&(e.classList.add("active","disabled"),e.setAttribute("disabled","disabled"))}),document.querySelector("#grupo-puesto-otra_habilidad").checked=!0,mostrarInputOtraHabilidad(),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},refreshHabilidadAspirante=async()=>{const e=`${base_url}Aspirante/getAllHabilidades`;try{divLoading.style.display="flex";const t=await fetch(e),{status:a,data:i}=await t.json();a?(document.querySelector("#txtListHabilidad").innerHTML='<option value="" disabled selected>Seleccione una habilidad</option>',i.forEach(e=>{document.querySelector("#txtListHabilidad").innerHTML+=`\n                    <option data-id="${e.idHabilidad}" value="${e.idHabilidad}-${e.nombreHabilidad}" class="opciones-habilidad">${e.nombreHabilidad}</option>\n                `}),await showHabilidadSelected()):document.querySelector("#txtListHabilidad").innerHTML+='\n                    <option value="" disabled selected>-- No se ha podido cargar la lista de habilidades. --</option>\n                ',divLoading.style.display="none"}catch(e){console.log(e)}},showHabilidadSelected=async()=>{const e=document.getElementById("list-habilidades-selected"),t=`${base_url}Aspirante/getHabilidadesSelected`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i&&"no"!==o?(document.querySelector("#data-idHabilidades i")&&document.querySelector("#data-idHabilidades i").classList.replace("la-plus","la-pen"),e.innerHTML="",o.forEach(t=>{e.innerHTML+=`\n                <div class="d-flex align-items-center justify-content- mb-2">\n                    <div class="col-6 d-flex justify-content-between" data-id="${t.idHabilidad}">\n                        <span>${t.nombrehabilidad}</span>\n                        <span>${t.nivelHabilidad}</span>\n                    </div>\n                    <a class="btn col-6 text-right" role="button">\n                        <i class="las la-pen" data-toggle="modal" data-target="#habilidades"></i>\n                    </a>\n                </div>\n                <hr/>\n                `})):e.innerHTML='\n                                        <p class="text-center">No hay habilidades asociadas al usuario. Puedes registrarlo, es gratis.</p>\n                                    ',divLoading.style.display="none"}catch(e){console.error(e)}},insertEstudio=async()=>{const e=formDataElement(formEstudios),t=`${base_url}Aspirante/insertEstudios`;try{divLoading.style.display="flex";const a=await fetch(t,{method:"POST",body:e}),{status:i,msg:o}=await a.json();i?(sweetAlert("Estudios aspirante",o,"success"),await showEstudios(),formEstudios.reset(),getDataAspirante()):sweetAlert("Error",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},showEstudios=async()=>{const e=document.getElementById("list-estudios"),t=`${base_url}Aspirante/getEstudiosAspirante`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i&&"no"!==o?(e.innerHTML="",o.forEach(t=>{e.innerHTML+=`\n                <div class="d-flex align-items-center justify-content-around mb-2">\n                    <div class="col-8">\n                        <h5>${t.nombreInstitucion}</h5>\n                        <h6>${t.nombreGrado}</h6>\n                        <span>${t.tituloObtenido}</span>\n                        <br />\n                        <span>${t.nombreSector}</span>\n                        <br>\n                        <span>${t.añoInicio} / ${t.mesInicio} - ${t.añoFin} / ${t.mesFin}</span>\n                    </div>\n                    <a class="btn col-4 text-right estudio-aspirante" role="button" data-idestudio="${t.idEstudio}">\n                        <i class="las la-pen" data-toggle="modal" data-target="#educacion" data-idestudio="${t.idEstudio}"></i>\n                    </a>\n                </div>\n                <hr/>\n                `})):e.innerHTML='\n                                        <p class="text-center">No hay estudios asociados al usuario. Puedes registrarlo, es gratis.</p>\n                                    ',divLoading.style.display="none"}catch(e){console.error(e)}},loadDataEditEducation=async e=>{const t=e.target.dataset.idestudio,a=`${base_url}Aspirante/getEstudiosAspiranteEdit/${t}`;try{divLoading.style.display="flex";const e=await fetch(a),{status:t,data:i}=await e.json();t&&(document.querySelector("#idEducacion").value=i.idEstudio,document.querySelector("#input-institucion").value=i.nombreInstitucion,document.querySelector("#input-titulo").value=i.tituloObtenido,document.querySelector("#txtCiudad").value=i.idCiudadEstudio,document.querySelector("#txtGradoEst").value=i.idGrado,document.querySelector("#txtSector").value=i.idSector,document.querySelector("#txtAnioIni").value=i.añoInicio,document.querySelector("#txtMesIni").value=i.mesInicio,document.querySelector("#txtAnioFin").value=i.añoFin,document.querySelector("#txtMesFin").value=i.mesFin),divLoading.style.display="none"}catch(e){console.error(e)}},insertExperienciaLaboral=async()=>{tinyMCE.triggerSave();const e=formDataElement(experienciaLaboral),t=`${base_url}Aspirante/insertExperiencia`;try{divLoading.style.display="flex";const a=await fetch(t,{method:"POST",body:e}),{status:i,msg:o}=await a.json();i?(sweetAlert("Experiencia laboral aspirante",o,"success"),await showExperienciaLaboral(),experienciaLaboral.reset(),getDataAspirante()):sweetAlert("Experiencia laboral aspirante",o,"warning"),divLoading.style.display="none"}catch(e){console.error(e)}},showExperienciaLaboral=async()=>{const e=document.getElementById("list-experiencia"),t=`${base_url}Aspirante/getExperienciaAspirante`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i&&"no"!==o?(e.innerHTML="",o.forEach(t=>{e.innerHTML+=`\n                <div class="d-flex align-items-center justify-content-around mb-2">                              \n                    <div class="col-11">\n                        <h5>${t.nombrePuestoDesempeño}</h5>\n                        <p>${t.empresaLaboro}</p>\n                        <span>${t.mesInicio} ${t.añoInicio} - ${t.mesFin} ${t.añoFin}</span>\n                        <p>${t.nombreSector}</p>\n                        <h6>Funciones desempeñadas:</h6>\n                        ${t.funcionDesempeño}\n                    </div>\n                    <a class="btn col-1 text-right estudio-experiencia" role="button" data-idexperiencia="${t.idInfoLaboral}">\n                        <i class="las la-pen" data-toggle="modal" data-target="#experiencia-laboral" data-idexperiencia="${t.idInfoLaboral}"></i>\n                    </a>\n                </div>\n                <hr/>\n                `})):e.innerHTML='\n                                        <p class="text-center">No hay experiencia laboral asociada al usuario. Puedes registrarla, es gratis.</p>\n                                    ',divLoading.style.display="none"}catch(e){console.error(e)}},loadDataEditExperience=async e=>{initTextEditorTinymce("funciones");const t=e.target.dataset.idexperiencia,a=`${base_url}Aspirante/getExperienciaAspiranteEdit/${t}`;try{divLoading.style.display="flex";const e=await fetch(a),{status:t,data:i}=await e.json();t&&(document.querySelector("#idExperiencia").value=i.idInfoLaboral,document.querySelector("#txtEmpresa").value=i.empresaLaboro,document.querySelector("#txtSectorExp").value=i.idSector,document.querySelector("#txtCiudadLab").value=i.idCiudadLaboroFK,document.querySelector("#txtTipoExp").value=i.idTipoExperiencia,document.querySelector("#txtPuestoDesempeñado").value=i.nombrePuestoDesempeño,document.querySelector("#txtAnioIniExp").value=i.añoInicio,document.querySelector("#txtMesIniExp").value=i.mesInicio,document.querySelector("#txtAnioFinExp").value=i.añoFin,document.querySelector("#txtMesFinExp").value=i.mesFin,tinymce.activeEditor.setContent(i.funcionDesempeño),document.querySelector("#funciones").value=i.funcionDesempeño),divLoading.style.display="none"}catch(e){console.error(e)}},validateFormPersonalInformation=async e=>{e.preventDefault(),tinyMCE.triggerSave(),""===document.querySelector("#especificaciones").value||""===document.querySelector("#txtEstado").value?sweetAlert("Campos obligatorios!","Se debe  rellenar todos lo campos. Todos son obligatorios!","error"):await saveDataAspirante()};document.getElementById("grupo-otro_puesto")&&document.getElementById("grupo-otro_puesto").addEventListener("click",()=>{mostrarInputOtroPuestoInteres()}),document.getElementById("grupo-otra_habilidad")&&document.getElementById("grupo-otra_habilidad").addEventListener("click",()=>{mostrarInputOtraHabilidad()}),document.getElementById("grupo-otro_idioma")&&document.getElementById("grupo-otro_idioma").addEventListener("click",()=>{mostrarInputOtroIdioma()});const validateFormPuestoInteres=async e=>{e.preventDefault(),"block"===inputOtroPuestoInteres.style.display?!1===campos.otro_puesto_interes&&sweetAlert("Campos obligatorios!","Se debe  rellenar todos lo campos. Todos son obligatorios!","error"):await insertPuestoInteresAspirante()},loadPersonalDescription=async()=>{const e=document.querySelector("#perfil-laboral-aspirante"),t=`${base_url}Aspirante/getDataAspirante`;try{divLoading.style.display="flex";const a=await fetch(t),{status:i,data:o}=await a.json();i&&"no"!==o?(showPersonalDescription(o),lockIconRegister("Aspirante"),unLockIconRegister("PuestoInteres"),unLockIconRegister("Idiomas"),unLockIconRegister("Habilidades"),unLockIconRegister("Educacion"),unLockIconRegister("Experiencia"),await refreshPuestoInteres(),await refreshIdiomasAspirante(),await refreshHabilidadAspirante(),await showEstudios(),await showExperienciaLaboral()):(lockIconRegister("PuestoInteres"),lockIconRegister("Idiomas"),lockIconRegister("Habilidades"),lockIconRegister("Educacion"),lockIconRegister("Experiencia"),e.innerHTML='\n                                                <p class="text-center">No se ha registrado ninguna descripción personal para esta usuario</p>\n                                            '),divLoading.style.display="none"}catch(e){console.error(e)}},validateFormIdiomas=e=>{e.preventDefault(),"block"==document.getElementById("txtIdioma").style.display&&(!1===campos.idioma?sweetAlert("Campos obligatorios!","Se debe  rellenar todos lo campos. Todos son obligatorios!","error"):insertNewIdioma())},validateFormHabilidad=e=>{e.preventDefault(),"block"===document.getElementById("txtHabilidad").style.display&&(!1===campos.habilidad?sweetAlert("Campos obligatorios!","Se debe  rellenar todos lo campos. Todos son obligatorios!","error"):insertHabilidad())},validateFormEstudios=e=>{e.preventDefault();const t=document.getElementById("input-institucion"),a=document.getElementById("input-titulo"),i=document.getElementById("txtCiudad"),o=document.getElementById("txtGradoEst"),s=document.getElementById("txtSector"),n=document.getElementById("txtAnioIni"),r=document.getElementById("txtMesIni"),d=document.getElementById("txtAnioFin"),l=document.getElementById("txtMesFin");""===t.value.trim()||""===a.value.trim()||""===i.value.trim()||""===o.value.trim()||""===s.value.trim()||""===n.value.trim()||""===r.value.trim()||""===d.value.trim()||""===l.value.trim()?sweetAlert("Error","Todos los campos son obligatorios!!","error"):parseInt(d.value)<parseInt(n.value)?sweetAlert("Datos incorrectos","Apreciado usuario el año de finalización de sus estudios no puede ser menor al año de inicio.","warning"):parseInt(n.value)===parseInt(d.value)&&parseInt(r.value)>parseInt(l.value)?sweetAlert("Datos incorrectos","Apreciado usuario el mes de finalización de sus estudios no puede ser menor al mes de inicio.","warning"):insertEstudio()},validateFormExperienciaLaboral=e=>{e.preventDefault(),tinyMCE.triggerSave();const t=document.getElementById("txtEmpresa"),a=document.getElementById("txtSectorExp"),i=document.getElementById("txtCiudadLab"),o=document.getElementById("txtTipoExp"),s=document.getElementById("txtPuestoDesempeñado"),n=document.getElementById("txtAnioIniExp"),r=document.getElementById("txtMesIniExp"),d=document.getElementById("txtAnioFinExp"),l=document.getElementById("txtMesFinExp"),c=document.getElementById("funciones");""===t.value.trim()||""===a.value.trim()||""===i.value.trim()||""===o.value.trim()||""===s.value.trim()||""===n.value.trim()||""===r.value.trim()||""===d.value.trim()||""===l.value.trim()||""===c.value?sweetAlert("Error","Todos los campos son obligatorios!!","error"):parseInt(d.value)<parseInt(n.value)?sweetAlert("Datos incorrectos","Apreciado usuario el año de finalización laboral no puede ser menor al año de inicio.","warning"):parseInt(n.value)===parseInt(d.value)&&parseInt(r.value)>parseInt(l.value)?sweetAlert("Datos incorrectos","Apreciado usuario el mes de finalización laboral no puede ser menor al mes de inicio.","warning"):insertExperienciaLaboral()};document.addEventListener("DOMContentLoaded",async()=>{if(await loadPersonalDescription(),document.querySelector("#edit-Aspirante")&&document.querySelector("#edit-Aspirante").addEventListener("click",e=>loadDataEditPersonalDescription(e)),document.querySelector("#list_PuestoInteres")){document.querySelector("#list_PuestoInteres").addEventListener("click",e=>{seleccionarPuestoInteres(e)})}document.querySelector(".estudio-aspirante")&&document.querySelectorAll(".estudio-aspirante").forEach(e=>e.addEventListener("click",e=>loadDataEditEducation(e))),document.querySelector(".estudio-experiencia")&&document.querySelectorAll(".estudio-experiencia").forEach(e=>e.addEventListener("click",e=>loadDataEditExperience(e)))}),formDescripcionPersonal.addEventListener("submit",validateFormPersonalInformation),formIdioma.addEventListener("submit",validateFormIdiomas),formHabilidad.addEventListener("submit",validateFormHabilidad),formEstudios.addEventListener("submit",validateFormEstudios),experienciaLaboral.addEventListener("submit",validateFormExperienciaLaboral),document.querySelector("#boton_add_puesto").addEventListener("click",insertPuestoInteres),document.querySelector("#btn-puesto-interes").addEventListener("click",validateFormPuestoInteres),document.querySelector("#data-idAspirante")&&document.querySelector("#data-idAspirante").addEventListener("click",()=>{initTextEditorTinymce("especificaciones")}),document.querySelector("#data-idExperiencia")&&document.querySelector("#data-idExperiencia").addEventListener("click",()=>initTextEditorTinymce("funciones"));